# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import store_pb2 as store__pb2


class FitnessServiceStub(object):
    """Основной сервис фитнес-центра
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServices = channel.unary_unary(
                '/fitness.FitnessService/GetServices',
                request_serializer=store__pb2.Empty.SerializeToString,
                response_deserializer=store__pb2.ServiceList.FromString,
                _registered_method=True)
        self.LoginUser = channel.unary_unary(
                '/fitness.FitnessService/LoginUser',
                request_serializer=store__pb2.LoginRequest.SerializeToString,
                response_deserializer=store__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.RegisterUser = channel.unary_unary(
                '/fitness.FitnessService/RegisterUser',
                request_serializer=store__pb2.RegisterRequest.SerializeToString,
                response_deserializer=store__pb2.RegisterResponse.FromString,
                _registered_method=True)
        self.GetTrainers = channel.unary_unary(
                '/fitness.FitnessService/GetTrainers',
                request_serializer=store__pb2.Empty.SerializeToString,
                response_deserializer=store__pb2.TrainerList.FromString,
                _registered_method=True)
        self.GetTrainerSchedule = channel.unary_unary(
                '/fitness.FitnessService/GetTrainerSchedule',
                request_serializer=store__pb2.TrainerScheduleRequest.SerializeToString,
                response_deserializer=store__pb2.TrainerScheduleResponse.FromString,
                _registered_method=True)
        self.GetTrainerClients = channel.unary_unary(
                '/fitness.FitnessService/GetTrainerClients',
                request_serializer=store__pb2.TrainerClientsRequest.SerializeToString,
                response_deserializer=store__pb2.TrainerClientsResponse.FromString,
                _registered_method=True)
        self.GetContacts = channel.unary_unary(
                '/fitness.FitnessService/GetContacts',
                request_serializer=store__pb2.Empty.SerializeToString,
                response_deserializer=store__pb2.ContactList.FromString,
                _registered_method=True)
        self.GetPrices = channel.unary_unary(
                '/fitness.FitnessService/GetPrices',
                request_serializer=store__pb2.Empty.SerializeToString,
                response_deserializer=store__pb2.PriceList.FromString,
                _registered_method=True)
        self.BookTraining = channel.unary_unary(
                '/fitness.FitnessService/BookTraining',
                request_serializer=store__pb2.TrainingBookingRequest.SerializeToString,
                response_deserializer=store__pb2.TrainingBookingResponse.FromString,
                _registered_method=True)
        self.AddBalance = channel.unary_unary(
                '/fitness.FitnessService/AddBalance',
                request_serializer=store__pb2.BalanceRequest.SerializeToString,
                response_deserializer=store__pb2.BalanceResponse.FromString,
                _registered_method=True)


class FitnessServiceServicer(object):
    """Основной сервис фитнес-центра
    """

    def GetServices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrainers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrainerSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrainerClients(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContacts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BookTraining(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FitnessServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetServices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServices,
                    request_deserializer=store__pb2.Empty.FromString,
                    response_serializer=store__pb2.ServiceList.SerializeToString,
            ),
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=store__pb2.LoginRequest.FromString,
                    response_serializer=store__pb2.LoginResponse.SerializeToString,
            ),
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=store__pb2.RegisterRequest.FromString,
                    response_serializer=store__pb2.RegisterResponse.SerializeToString,
            ),
            'GetTrainers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrainers,
                    request_deserializer=store__pb2.Empty.FromString,
                    response_serializer=store__pb2.TrainerList.SerializeToString,
            ),
            'GetTrainerSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrainerSchedule,
                    request_deserializer=store__pb2.TrainerScheduleRequest.FromString,
                    response_serializer=store__pb2.TrainerScheduleResponse.SerializeToString,
            ),
            'GetTrainerClients': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrainerClients,
                    request_deserializer=store__pb2.TrainerClientsRequest.FromString,
                    response_serializer=store__pb2.TrainerClientsResponse.SerializeToString,
            ),
            'GetContacts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContacts,
                    request_deserializer=store__pb2.Empty.FromString,
                    response_serializer=store__pb2.ContactList.SerializeToString,
            ),
            'GetPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrices,
                    request_deserializer=store__pb2.Empty.FromString,
                    response_serializer=store__pb2.PriceList.SerializeToString,
            ),
            'BookTraining': grpc.unary_unary_rpc_method_handler(
                    servicer.BookTraining,
                    request_deserializer=store__pb2.TrainingBookingRequest.FromString,
                    response_serializer=store__pb2.TrainingBookingResponse.SerializeToString,
            ),
            'AddBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBalance,
                    request_deserializer=store__pb2.BalanceRequest.FromString,
                    response_serializer=store__pb2.BalanceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fitness.FitnessService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('fitness.FitnessService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FitnessService(object):
    """Основной сервис фитнес-центра
    """

    @staticmethod
    def GetServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/GetServices',
            store__pb2.Empty.SerializeToString,
            store__pb2.ServiceList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/LoginUser',
            store__pb2.LoginRequest.SerializeToString,
            store__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/RegisterUser',
            store__pb2.RegisterRequest.SerializeToString,
            store__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/GetTrainers',
            store__pb2.Empty.SerializeToString,
            store__pb2.TrainerList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrainerSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/GetTrainerSchedule',
            store__pb2.TrainerScheduleRequest.SerializeToString,
            store__pb2.TrainerScheduleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrainerClients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/GetTrainerClients',
            store__pb2.TrainerClientsRequest.SerializeToString,
            store__pb2.TrainerClientsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetContacts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/GetContacts',
            store__pb2.Empty.SerializeToString,
            store__pb2.ContactList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/GetPrices',
            store__pb2.Empty.SerializeToString,
            store__pb2.PriceList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BookTraining(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/BookTraining',
            store__pb2.TrainingBookingRequest.SerializeToString,
            store__pb2.TrainingBookingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fitness.FitnessService/AddBalance',
            store__pb2.BalanceRequest.SerializeToString,
            store__pb2.BalanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
