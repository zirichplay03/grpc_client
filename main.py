import sys
from PyQt6.QtWidgets import (QApplication, QMainWindow, QLabel, QPushButton,
                             QVBoxLayout, QHBoxLayout, QWidget, QStackedWidget,
                             QLineEdit, QFormLayout, QTabWidget, QMessageBox, QComboBox, QInputDialog)
from PyQt6.QtGui import QPixmap
from PyQt6.QtCore import Qt
from grpc_client import FitnessClient
from PyQt6.QtCore import QStringListModel, Qt
from PyQt6.QtWidgets import QComboBox, QListView



class ClientWindow(QMainWindow):  # –û–∫–Ω–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    def __init__(self, full_name):
        super().__init__()

        self.full_name = full_name  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞
        self.client = FitnessClient()  # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞
        self.trainers = []  # –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–µ—Ä–æ–≤
        self.time_slots = []  # –°–ø–∏—Å–æ–∫ –≤—Ä–µ–º–µ–Ω–∏

        self.setWindowTitle("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞")
        self.setGeometry(100, 100, 800, 600)

        self.initUI()

    def initUI(self):
        self.setStyleSheet("""
            QMainWindow {
                background-color: #f8f9fb;
            }
            QPushButton {
                background-color: #ff6600;
                color: white;
                font-size: 14px;
                font-weight: bold;
                border: none;
                padding: 12px 25px;
                border-radius: 10px;
                margin: 10px 0;
                transition: background-color 0.3s;
            }
            QPushButton:hover {
                background-color: #ff8533;
            }
            QLabel {
                font-size: 18px;
                font-weight: bold;
                color: #333;
                padding-bottom: 40px;
                text-align: center;
            }
            QVBoxLayout {
                spacing: 20px;
                margin-top: 20px;
            }
            QHBoxLayout {
                spacing: 30px;
            }
        """)

        main_layout = QHBoxLayout()  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π layout

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É—Å–ª—É–≥ –∏ –∑–∞–ø–∏—Å–∏ —Å–ª–µ–≤–∞
        button_layout = QVBoxLayout()

        self.services_button = QPushButton("üèãÔ∏è‚Äç‚ôÇÔ∏è –£—Å–ª—É–≥–∏")
        self.services_button.clicked.connect(self.showServices)
        button_layout.addWidget(self.services_button)

        self.booking_button = QPushButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")
        self.booking_button.clicked.connect(self.showBookingPage)
        button_layout.addWidget(self.booking_button)

        self.logout_button = QPushButton("üö™ –í—ã–π—Ç–∏")
        self.logout_button.clicked.connect(self.logout)
        button_layout.addWidget(self.logout_button)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–ª–µ–≤–∞
        main_layout.addLayout(button_layout)

        # –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–ø—Ä–∞–≤–∞
        self.info_label = QLabel(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {self.full_name}! üëã")
        self.info_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.info_label.setStyleSheet("font-size: 20px; font-weight: bold; color: #333;")
        main_layout.addWidget(self.info_label, 1)  # –ó–∞–Ω–∏–º–∞–µ—Ç 1/3 –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞

        container = QWidget()
        container.setLayout(main_layout)
        self.setCentralWidget(container)

    def showBookingPage(self):
        self.info_label.setText("–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–µ—Ä–∞ –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É üèãÔ∏è‚Äç‚ôÇÔ∏è")
        self.updateInfo()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–µ—Ä–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
        self.getTrainers()

        # –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏
        right_layout = QVBoxLayout()

        # –°–æ–∑–¥–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–æ–≤
        self.trainer_combo = QComboBox()
        self.trainer_combo.addItems([trainer.name for trainer in self.trainers])

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–µ–Ω–µ—Ä–∞
        self.trainer_combo.currentTextChanged.connect(self.getTimeSlots)

        # –°–æ–∑–¥–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏
        self.time_combo = QComboBox()

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
        book_button = QPushButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
        book_button.clicked.connect(self.bookTraining)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ layout
        right_layout.addWidget(self.trainer_combo)
        right_layout.addWidget(self.time_combo)
        right_layout.addWidget(book_button)

        # –°–æ–∑–¥–∞–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π layout –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        main_layout = QHBoxLayout()  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π layout –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É—Å–ª—É–≥ –∏ –∑–∞–ø–∏—Å–∏ —Å–ª–µ–≤–∞
        button_layout = QVBoxLayout()
        services_button = QPushButton("üèãÔ∏è‚Äç‚ôÇÔ∏è –£—Å–ª—É–≥–∏")
        services_button.clicked.connect(self.showServices)
        button_layout.addWidget(services_button)

        booking_button = QPushButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")
        booking_button.clicked.connect(self.showBookingPage)
        button_layout.addWidget(booking_button)

        logout_button = QPushButton("üö™ –í—ã–π—Ç–∏")
        logout_button.clicked.connect(self.logout)
        button_layout.addWidget(logout_button)

        main_layout.addLayout(button_layout)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–ª–µ–≤–∞

        # –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–ø—Ä–∞–≤–∞
        self.info_label = QLabel(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {self.full_name}! üëã")
        self.info_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.info_label.setStyleSheet("font-size: 20px; font-weight: bold; color: #333;")
        main_layout.addWidget(self.info_label, 1)  # –ó–∞–Ω–∏–º–∞–µ—Ç 1/3 –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞

        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤—É—é —á–∞—Å—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout.addLayout(right_layout)

        container = QWidget()
        container.setLayout(main_layout)
        self.setCentralWidget(container)

    def getTrainers(self):
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–µ—Ä–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
            response = self.client.get_trainers()
            self.trainers = response.trainers
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–µ–Ω–µ—Ä–æ–≤: {e}")
            self.trainers = []

    def getTimeSlots(self):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç—Ä–µ–Ω–µ—Ä–∞ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
            trainer_name = self.trainer_combo.currentText()  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç—Ä–µ–Ω–µ—Ä–∞
            response = self.client.get_schedule(trainer_name)  # –ó–∞–ø—Ä–æ—Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Ä–µ–º–µ–Ω–∏
            self.time_slots = [schedule for schedule in response.schedule]

            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏
            self.time_combo.clear()
            self.time_combo.addItems(self.time_slots)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏: {e}")
            self.time_slots = []

    def bookTraining(self):
        try:
            trainer_name = self.trainer_combo.currentText()
            time_slot = self.time_combo.currentText()

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
            booking_response = self.client.book_training(self.full_name, trainer_name, time_slot)

            if booking_response.success:
                QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!")
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", booking_response.message)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É.")

    def showTrainerDialog(self, trainer_names):
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –≤—ã–±–æ—Ä–æ–º —Ç—Ä–µ–Ω–µ—Ä–∞
        return QInputDialog.getItem(self, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–µ—Ä–∞", "–¢—Ä–µ–Ω–µ—Ä:", trainer_names, 0, False)

    def showScheduleDialog(self, available_times):
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        return QInputDialog.getItem(self, "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è", "–í—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:", available_times, 0, False)

    def showServices(self):
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ —Å —Å–µ—Ä–≤–µ—Ä–∞
            response = self.client.get_services()

            # –ï—Å–ª–∏ –Ω–µ—Ç —É—Å–ª—É–≥
            if not response.services:
                self.info_label.setText("–£—Å–ª—É–≥–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã üòï")
                self.updateInfo()
                return

            # –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –µ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
            services_text = ""
            for service in response.services:
                services_text += f"‚úÖ {service.name} - {service.price}\nüë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä: {service.trainer}\nüìû –ö–æ–Ω—Ç–∞–∫—Ç: {service.contact}\n\n"

            self.info_label.setText(services_text)
            self.updateInfo()

        except Exception as e:
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Å–ª—É–≥: {e}")
            self.info_label.setText("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Å–ª—É–≥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            self.updateInfo()

    def logout(self):
        self.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –∫–ª–∏–µ–Ω—Ç–∞

    def showButtons(self):
        self.services_button.setVisible(True)
        self.booking_button.setVisible(True)
        self.logout_button.setVisible(True)

    def updateInfo(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–ø—Ä–∞–≤–∞"""
        self.info_label.setAlignment(Qt.AlignmentFlag.AlignTop)
        self.info_label.adjustSize()


class TrainerWindow(QMainWindow):
    def __init__(self, trainer_name):
        super().__init__()
        self.trainer_name = trainer_name
        self.client = FitnessClient()

        self.setWindowTitle("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Ç—Ä–µ–Ω–µ—Ä–∞")
        self.setGeometry(100, 100, 800, 600)

        self.initUI()

    def initUI(self):
        self.setStyleSheet("""...""")
        main_layout = QVBoxLayout()

        self.clients_button = QPushButton("üë• –ö–ª–∏–µ–Ω—Ç—ã")
        self.clients_button.clicked.connect(self.showClients)
        main_layout.addWidget(self.clients_button)

        self.info_label = QLabel(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Ç—Ä–µ–Ω–µ—Ä {self.trainer_name}! üëã")
        self.info_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.info_label.setStyleSheet("font-size: 20px; font-weight: bold; color: #333;")
        main_layout.addWidget(self.info_label)

        container = QWidget()
        container.setLayout(main_layout)
        self.setCentralWidget(container)

    def showClients(self):
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ç—Ä–µ–Ω–µ—Ä–∞
            clients_info = self.client.get_trainer_clients(self.trainer_name)

            # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            print(f"–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {clients_info}")

            if not clients_info.clients:
                self.info_label.setText("–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.")
            else:
                clients_text = "–ó–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã:\n"
                for client_info in clients_info.clients:
                    # –ü–µ—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                    print(f"Client Info: {client_info}")

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö client_info
                    if hasattr(client_info, 'client_name') and hasattr(client_info, 'training_time'):
                        client_name = client_info.client_name  # –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞
                        training_time = client_info.training_time  # –í—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏

                        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        clients_text += f"–ò–º—è: {client_name}, –í—Ä–µ–º—è: {training_time}\n"
                    else:
                        print("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞")

                self.info_label.setText(clients_text)
        except Exception as e:
            self.info_label.setText(f"–û—à–∏–±–∫–∞: {e}")
            print(f"–û—à–∏–±–∫–∞: {e}")

    def updateInfo(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–ø—Ä–∞–≤–∞"""
        self.info_label.setAlignment(Qt.AlignmentFlag.AlignTop)
        self.info_label.adjustSize()

    def logout(self):
        self.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Ç—Ä–µ–Ω–µ—Ä–∞


class FitnessApp(QMainWindow):
    def __init__(self):
        super().__init__()

        self.client = FitnessClient()

        self.setWindowTitle("Run Hall - –§–∏—Ç–Ω–µ—Å –∏ –°–ø–æ—Ä—Ç")
        self.setGeometry(100, 100, 800, 600)

        self.initUI()

    def initUI(self):
        self.setStyleSheet("""
            QMainWindow {
                background-color: #f8f9fb;
            }
            QPushButton {
                background-color: #ff6600;
                color: white;
                font-size: 14px;
                font-weight: bold;
                border: none;
                padding: 10px 15px;
                border-radius: 8px;
                margin: 4px 0;
            }
            QPushButton:hover {
                background-color: #ff8533;
            }
            QLineEdit {
                background-color: white;
                border: 2px solid #ddd;
                padding: 6px;
                border-radius: 6px;
                font-size: 14px;
            }
            QLineEdit:focus {
                border-color: #ff6600;
            }
            QLabel#footer {
                font-size: 12px;
                color: #555;
                padding: 5px;
            }
            QLabel#header {
                font-size: 24px;
                font-weight: bold;
                color: #333;
            }
        """)

        # –õ–æ–≥–æ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        logo_label = QLabel()
        logo_label.setPixmap(QPixmap("img.png").scaled(80, 80, Qt.AspectRatioMode.KeepAspectRatio))

        title_label = QLabel("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Run Hall!")
        title_label.setObjectName("header")

        header_layout = QHBoxLayout()
        header_layout.addWidget(logo_label)
        header_layout.addWidget(title_label)
        header_layout.addStretch()

        # –ú–µ–Ω—é —Å–ª–µ–≤–∞
        menu_layout = QVBoxLayout()

        self.pages = QStackedWidget()

        sections = [
            "üèãÔ∏è‚Äç‚ôÇÔ∏è –£—Å–ª—É–≥–∏",
            "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
        ]

        for page_name in sections:
            button = QPushButton(page_name)
            button.setMinimumHeight(40)
            button.clicked.connect(lambda checked, name=page_name: self.switchPage(name))
            menu_layout.addWidget(button)

            if page_name == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç":
                page = self.createLoginRegisterPage()
            elif page_name == "üèãÔ∏è‚Äç‚ôÇÔ∏è –£—Å–ª—É–≥–∏":
                page = self.createServicesPage()

            self.pages.addWidget(page)

        self.pages.setCurrentIndex(0)

        # –ü–æ–¥–≤–∞–ª
        footer_label = QLabel("üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã: +7 (495) 123-45-67 | –ê–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1")
        footer_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        footer_label.setObjectName("footer")

        # –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞
        main_layout = QVBoxLayout()
        main_layout.addLayout(header_layout)

        content_layout = QHBoxLayout()
        content_layout.addLayout(menu_layout, 1)
        content_layout.addWidget(self.pages, 3)

        main_layout.addLayout(content_layout)
        main_layout.addWidget(footer_label)

        container = QWidget()
        container.setLayout(main_layout)
        self.setCentralWidget(container)

    def createLoginRegisterPage(self):
        widget = QWidget()
        layout = QVBoxLayout()

        self.tabs = QTabWidget()

        login_tab = self.createLoginForm()
        register_tab = self.createRegisterForm()

        self.tabs.addTab(login_tab, "–í—Ö–æ–¥")
        self.tabs.addTab(register_tab, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")

        layout.addWidget(self.tabs)
        widget.setLayout(layout)

        return widget

    def createLoginForm(self):
        widget = QWidget()
        layout = QVBoxLayout()

        form_layout = QFormLayout()
        self.login_input = QLineEdit()
        self.password_input = QLineEdit()
        self.password_input.setEchoMode(QLineEdit.EchoMode.Password)

        form_layout.addRow("–õ–æ–≥–∏–Ω:", self.login_input)
        form_layout.addRow("–ü–∞—Ä–æ–ª—å:", self.password_input)

        login_button = QPushButton("–í–æ–π—Ç–∏")
        login_button.clicked.connect(self.login)

        layout.addLayout(form_layout)
        layout.addWidget(login_button, alignment=Qt.AlignmentFlag.AlignCenter)

        widget.setLayout(layout)
        return widget

    def createRegisterForm(self):
        widget = QWidget()
        layout = QVBoxLayout()

        form_layout = QFormLayout()
        self.reg_login_input = QLineEdit()
        self.reg_email_input = QLineEdit()
        self.reg_password_input = QLineEdit()
        self.reg_password_input.setEchoMode(QLineEdit.EchoMode.Password)

        form_layout.addRow("–õ–æ–≥–∏–Ω:", self.reg_login_input)
        form_layout.addRow("Email:", self.reg_email_input)
        form_layout.addRow("–ü–∞—Ä–æ–ª—å:", self.reg_password_input)

        register_button = QPushButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
        register_button.clicked.connect(self.register)

        layout.addLayout(form_layout)
        layout.addWidget(register_button, alignment=Qt.AlignmentFlag.AlignCenter)

        widget.setLayout(layout)
        return widget

    def createServicesPage(self):
        widget = QWidget()
        layout = QVBoxLayout()

        response = self.client.get_services()

        if not response.services:
            layout.addWidget(QLabel("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥ üòï"))

        for service in response.services:
            label = QLabel(f"üë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä: {service.trainer}")
            label.setStyleSheet("padding: 8px; background-color: #ffffff; border: 1px solid #ddd; border-radius: 6px;")
            layout.addWidget(label)

        widget.setLayout(layout)
        return widget

    def switchPage(self, page_name):
        index = ["üèãÔ∏è‚Äç‚ôÇÔ∏è –£—Å–ª—É–≥–∏", "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"].index(page_name)
        self.pages.setCurrentIndex(index)

    def login(self):
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è
            response = self.client.login(self.login_input.text(), self.password_input.text())

            if response.success:
                print(f"Login successful. Role: {response.role}, Full Name: {response.full_name}")

                # Based on role, open the respective window
                if response.role == "client":
                    self.close()  # Close the current window
                    self.client_window = ClientWindow(response.full_name)  # Pass the client name
                    self.client_window.show()

                elif response.role == "trainer":
                    self.close()  # Close the current window
                    self.client_window = TrainerWindow(response.full_name)  # Pass the client name
                    self.client_window.show()


            else:
                print(f"Login failed: {response.message}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –≤—Ö–æ–¥–µ
                QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")

        except Exception as e:
            print(f"Error during login: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –≤–æ–∑–Ω–∏–∫–ª–æ
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—Ö–æ–¥–∞.")

    def register(self):
        response = self.client.register(self.reg_login_input.text(), self.reg_password_input.text(),
                                        self.reg_email_input.text())
        QMessageBox.information(self, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", response.message)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = FitnessApp()
    window.show()
    sys.exit(app.exec())
